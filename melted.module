<?php
// $Id$

/**
 * @file
 * A Module to conffigure and connect to a melted playout server
 *
 * This Module offers an Admin Interface for configuring the IP, Port and Mode
 * of a melted server instance. 
 * Requires a running melted instance. You can find melted on mltproject.org
*/


/**
 * Implementation of hook_help
*/
function melted_help($path, $arg) {
  if ($path == 'admin/help#melted') {
    return t('Melted Server Configuration');
  }
}


/**
 * Implements hook_permission().
 *
 * Since the access to our new custom pages will be granted based on
 * special permissions, we need to define what those permissions are here.
 * This ensures that they are available to enable on the user role
 * administration pages.
 */
function melted_permission() {
  return array(
  	'access melted' => array(
  	  'title' => t('Access melted configuration'),
  	  'description' => t('Allow users to ,manage the Melted Server Configuration'),
    ),
     );
}




/**
 * Implementation of hook_menu().
*/
function melted_menu() {
  $items = array();

  $items['admin/config/melted'] = array(
    'title' => 'Melted Playout Server',
    'description' => 'Configuration of melted',
    'page callback' => 'melted_overview',
    'access arguments' => array('access melted'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/melted/server'] = array(
    'title' => 'Melted Server Configuration',
    'description' => 'Configure the Melted Playout Server',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('melted_server_config_form'),
    'access arguments' => array('access melted'),
    'type' => MENU_NORMAL_ITEM,
  );

  //now define the menu entry for the status block callback. so we can make some nice ajax
 $items['melted/refresh'] = array(
    'page callback' => 'melted_refresh',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function melted_overview() {
  return t('Melted Config');
}

/**
 * Form builder; Create the form for the Melted Server Configuration
*/
function melted_server_config_form($form, &$form_state) {
  //Ip address or hostname of the Melted Server
  $form['melted_server_config_ip'] = array(
    '#type' => 'textfield',
    '#title' => 'Hostname',
    '#default_value' => variable_get('melted_server_config_ip','localhost'),
    '#description' => t('Enter the Servername or Ip Address of the Melted Server. Usually this will be set to localhost'),
    '#required' => TRUE,
    '#length' => 20,
    '#maxlength' => 50,
  );

  $form['melted_server_config_port'] = array(
    '#type' => 'textfield',
    '#title' => 'Port',
    '#description' => t('The Port of the Melted Server. Usually 5250.'),
    '#default_value' => variable_get('melted_server_config_port','5250'),
    '#required' => TRUE,
    '#length' => 5,
    '#malength' => 5,
   );

return  system_settings_form($form);
}


/**
 * Implementation of hook_block_info
*/
function melted_block_info() {
  $blocks = array();

  $blocks['melted_control'] = array(
    'info' => t('Shows the Status of the Melted Server'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}


/**
 * Implementation of hook_block_view
*/
function melted_block_view($block_name = '') {
  if ($block_name = 'melted_control') {
   
//include_once('includes/playout.php');
//include_once('includes/client.php'); 
  $content = melted_getstatus(); 
    $block = array(
      'subject' => t('Melted Status'),
      'content' => $content,
    );

  return $block;
  }
}

function melted_getstatus() {
  $path = drupal_get_path('module', 'melted');
  drupal_add_js ($path . '/js/melted.js');
  $output = '<div id="melted_status"></div>';
  return $output;
}

function melted_refresh() {
  $hostname = variable_get('melted_server_config_ip');
  $port = variable_get('melted_server_config_port');
  $myMelted = new MvcpClient($hostname,$port,1);
  $myMelted->connect();
  $output = '<div id="melted_status">';
  $output.="Connection to ".$hostname.":".$port."<br/>";
  if ($myMelted->isConnected()) $output.="Status: Online";
  else $output.="Status: Offline";
  $output.='</div>';
  return $output;
}
